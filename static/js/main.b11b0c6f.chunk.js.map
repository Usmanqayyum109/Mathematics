{"version":3,"sources":["Componets/Header.jsx","Componets/math.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","react_default","a","createElement","className","Test","_useState","useState","_useState2","Object","slicedToArray","fNumber","setFNumber","_useState3","_useState4","lNumber","setLNumber","_useState5","_useState6","number","setNumber","_useState7","_useState8","answer","setAnswer","_useState9","_useState10","put","setPut","_useState11","_useState12","answerDetail","setAnswerDetail","_useState13","_useState14","tQuestion","setTQuestion","_useState15","_useState16","rQuestion","setRQuestion","_useState17","_useState18","wQuestion","setWQuestion","_useState19","_useState20","cAnswer","setCAnswer","expression","type","name","placeholder","value","onChange","e","target","onClick","x","newFNumber","Math","trunc","random","newLNumber","floor","work","studentAnswer","ourAnswer","parseInt","concat","App","Componets_Header","math","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b11b0c6f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='header'>\r\n        \r\n      <h1>MATHEMATICS TEST SESSION</h1>\r\n      <h2>Question & Answer</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\n\r\nfunction Test () {\r\n\r\n    const [fNumber,setFNumber] = useState(2);\r\n    const [lNumber,setLNumber] = useState(2);\r\n    const [number,setNumber] = useState(\"×\");\r\n    // const [equal,setEqual] = useState(\"=\");\r\n    const [answer,setAnswer] = useState(4);\r\n    const [put,setPut] = useState();\r\n    const [answerDetail,setAnswerDetail] = useState();\r\n    const [tQuestion,setTQuestion] = useState(1);\r\n    const [rQuestion,setRQuestion] = useState(0);\r\n    const [wQuestion,setWQuestion] = useState(0);\r\n    const [cAnswer,setCAnswer] = useState(true);\r\n    // const [detail,setDetail] = useState();\r\n\r\n    const expression = [\"+\",\"-\",\"×\",\"÷\"];\r\n\r\n    function work(x) {\r\n      setAnswerDetail(\"\");\r\n      setPut(\"\");\r\n      setCAnswer(true);\r\n        setTQuestion(tQuestion + 1);\r\n        if (x === 0) {\r\n          setNumber(expression[0]);\r\n        //   setEqual(\"=\"); \r\n          \r\n          setAnswer(\"\");\r\n         const  newFNumber = Math.trunc(Math.random() * (100 - 1 + 1) + 1);\r\n         const  newLNumber = Math.floor(Math.random() * 101);\r\n         setAnswer(newFNumber + newLNumber);\r\n         setFNumber(newFNumber);\r\n         setLNumber(newLNumber);\r\n          \r\n        } else if (x === 1) {\r\n          setNumber(expression[1]); \r\n        //   setEqual(\"=\");\r\n             \r\n         const  newFNumber = Math.trunc(Math.random() * (100 - 1 + 1) + 1);\r\n         const  newLNumber = Math.floor(Math.random() * newFNumber);\r\n        \r\n          setAnswer(newFNumber - newLNumber);\r\n          setFNumber(newFNumber);\r\n          setLNumber(newLNumber);\r\n          \r\n           \r\n       \r\n    \r\n    } else if (x === 2) {\r\n            setNumber(expression[2]);\r\n            // setEqual(\"=\");    \r\n            const newFNumber = Math.trunc(Math.random() * (10 - 1 + 1) + 1);\r\n            const newLNumber = Math.floor(Math.random() * 11);\r\n            setAnswer(newFNumber * newLNumber);\r\n            setFNumber(newFNumber);\r\n            setLNumber(newLNumber);\r\n            \r\n        } else if (x === 3) {\r\n            setNumber(expression[3]); \r\n            // setEqual(\"=\");   \r\n             let newFNumber = Math.floor(Math.random() * 101);\r\n             let newLNumber = Math.trunc(Math.random() * (10 - 1 + 1) + 1);\r\n               while (newFNumber % newLNumber !== 0)\r\n               {\r\n                newFNumber = Math.floor(Math.random() * 101);\r\n                newLNumber = Math.trunc(Math.random() * (10 - 1 + 1) + 1);\r\n               }\r\n               if (newFNumber > (newLNumber * 10) )\r\n               {\r\n                   newFNumber = newLNumber * 10;\r\n               }\r\n                setAnswer(newFNumber / newLNumber);\r\n                setFNumber(newFNumber);\r\n                setLNumber(newLNumber);\r\n           \r\n            }\r\n           \r\n        }\r\n        // function end(){\r\n        //     setDetail(\"How are you ?\");\r\n            \r\n        //   }  \r\n      \r\n        function DisplayResult(studentAnswer, ourAnswer){\r\n          // setAnswer(\"\");\r\n                if (cAnswer === true){\r\n                    setCAnswer(false);\r\n                \r\n                 if (parseInt(studentAnswer) === ourAnswer){\r\n                   setAnswerDetail(\"CONGRATULATIONS!  Your answer is right.\");\r\n                    \r\n                    setRQuestion(rQuestion + 1);\r\n                 } else {\r\n                    setAnswerDetail(`Your Answer is WRONG, Right Answer is ${answer}.`);\r\n                    setWQuestion(wQuestion + 1);\r\n                 }\r\n                } \r\n                  \r\n                \r\n               \r\n                } \r\n        \r\n                \r\nreturn (\r\n<div>\r\n{/* <Link to=\"Deatails\">Click to view our about page</Link> */}\r\n  <div>\r\n    \r\n  </div>\r\n   <div >\r\n    <div >\r\n    <h1 className='number'>{fNumber}<br />{lNumber}</h1>\r\n    </div>\r\n   <h3 className='with'>{number}</h3>\r\n   \r\n    <input className='input' type=\"text\" name='enter' placeholder='Enter Your  Answer' value={put} onChange={(e) => setPut(e.target.value)}/>\r\n    </div>\r\n   \r\n    \r\n       \r\n    \r\n    <div>\r\n    <button className='button' onClick={() =>{work(Math.floor(Math.random() * 4))}}>Next Question</button><br />\r\n    <button className='button1' onClick ={() => {DisplayResult(put,  answer)}}>Check Your Answer </button>\r\n    </div>\r\n        <h1 className='answer'>{answerDetail}</h1>\r\n        <div className='count'>\r\n        <h2 >Total Question: {tQuestion}</h2>    \r\n        <h4>Total Right Answers: {rQuestion}</h4> \r\n        <h4>Total Wrong Answers: {wQuestion}</h4>       \r\n        </div>\r\n      \r\n      <div>\r\n       <button >Details</button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n)\r\n}\r\n\r\n\r\n\r\nexport default Test;","import React from 'react';\nimport './App.css';\nimport Header from './Componets/Header';\nimport Test from './Componets/math';\n\n\n\nfunction App() {\n  return (\n    <div >\n    <Header />\n    <Test />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}